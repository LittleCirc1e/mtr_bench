{"prompt": "Let's play the Bee Chase Game! Your task is to catch Nastya by strategically moving three bees on a special honeycomb graph.\n\nRules:\n1. Game Setup:\n   - Graph: 10 vertices connected by 15 edges\n   - Edges:\n   - Edge: (1-2)\n   - Edge: (2-3)\n   - Edge: (3-4)\n   - Edge: (4-5)\n   - Edge: (5-6)\n   - Edge: (6-7)\n   - Edge: (7-8)\n   - Edge: (8-9)\n   - Edge: (9-10)\n   - Edge: (10-1)\n   - Edge: (6-9)\n   - Edge: (5-8)\n   - Edge: (2-4)\n   - Edge: (7-10)\n   - Edge: (1-3)\n   - You control 3 bees\n   - I control Nastya\n   - Each vertex connects to at most 3 others\n   - Each edge is part of a cycle of length \u2264 5\n\n2. Game Mechanics:\n   - First round:\n     * You place 3 bees on any vertices\n     * I place Nastya on a different vertex\n   - Each subsequent round:\n     * You move each bee (or keep in place)\n     * I move Nastya along one edge\n   - Movement rules:\n     * Can only move along edges\n     * Multiple bees can share same vertex\n     * Nastya must move each turn\n     * All moves must be valid graph moves\n\n3. Victory Conditions:\n   - You win if any bee reaches same vertex as Nastya\n   - You lose if not caught after 10 moves\n   - Game ends immediately upon catch\n\nInstructions:\n- Format your moves as: 'My Choice: X Y Z'\n  where X, Y, Z are vertex numbers for three bees\n- Give your reasoning before each move\n- Wait for my response (Nastya's new position) before next move\n\nExample Round:\nInitial placement:\nYou: 'My Choice: 1 2 3'\n- Placing bees at vertices 1,2,3\n\nI: '5'\n- Nastya appears at vertex 5\n\nYou: 'My Choice: 2 3 4'\n- Moving bees to surround Nastya\n\nI: '6'\n- Nastya moves to vertex 6\nResult: You catch Nastya!\n\nRemember:\n- Use exact format: 'My Choice: X Y Z'\n- Choose only valid vertex numbers\n- Plan moves to trap Nastya\n- Invalid move = immediate loss\n- Maximum 10 moves to win\n\nReady to start? Make your first query!", "type": "Strategic Gaming", "scale": 10, "difficulty": "easy", "title": "BeeChase", "question_id": 1, "graph": [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 10], [10, 1], [6, 9], [5, 8], [2, 4], [7, 10], [1, 3]], "turns": 10}
