{"question_id": 1, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 7 and 9\n   Path 3: a direct edge between vertices 10 and 12\n   Path 4: a direct edge between vertices 7 and 12\n   Path 5: a direct edge between vertices 1 and 6\n   Path 6: a direct edge between vertices 5 and 7\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [7, 9], [10, 12], [7, 12], [1, 6], [5, 7]]}}
{"question_id": 2, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 10 and 12\n   Path 3: a direct edge between vertices 8 and 12\n   Path 4: a direct edge between vertices 8 and 10\n   Path 5: a direct edge between vertices 9 and 11\n   Path 6: a direct edge between vertices 3 and 5\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [10, 12], [8, 12], [8, 10], [9, 11], [3, 5]]}}
{"question_id": 3, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 2 and 6\n   Path 3: a direct edge between vertices 4 and 8\n   Path 4: a direct edge between vertices 1 and 5\n   Path 5: a direct edge between vertices 8 and 12\n   Path 6: a direct edge between vertices 7 and 11\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 6], [4, 8], [1, 5], [8, 12], [7, 11]]}}
{"question_id": 4, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 4 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 2 and 9\n   Path 3: a direct edge between vertices 4 and 7\n   Path 4: a direct edge between vertices 9 and 11\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 4, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [2, 9], [4, 7], [9, 11]]}}
{"question_id": 5, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 12 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> 1\n   Path 2: a direct edge between vertices 4 and 6\n   Path 3: a direct edge between vertices 8 and 10\n   Path 4: a direct edge between vertices 8 and 11\n   Path 5: a direct edge between vertices 8 and 12\n   Path 6: a direct edge between vertices 9 and 11\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1], [4, 6], [8, 10], [8, 11], [8, 12], [9, 11]]}}
{"question_id": 6, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 12 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> 1\n   Path 2: a direct edge between vertices 8 and 12\n   Path 3: a direct edge between vertices 5 and 12\n   Path 4: a direct edge between vertices 4 and 9\n   Path 5: a direct edge between vertices 9 and 11\n   Path 6: a direct edge between vertices 5 and 9\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1], [8, 12], [5, 12], [4, 9], [9, 11], [5, 9]]}}
{"question_id": 7, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 12 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> 1\n   Path 2: a direct edge between vertices 5 and 7\n   Path 3: a direct edge between vertices 5 and 8\n   Path 4: a direct edge between vertices 6 and 11\n   Path 5: a direct edge between vertices 2 and 5\n   Path 6: a direct edge between vertices 3 and 7\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1], [5, 7], [5, 8], [6, 11], [2, 5], [3, 7]]}}
{"question_id": 8, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 3 and 7\n   Path 3: a direct edge between vertices 2 and 9\n   Path 4: a direct edge between vertices 7 and 10\n   Path 5: a direct edge between vertices 9 and 11\n   Path 6: a direct edge between vertices 4 and 11\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [3, 7], [2, 9], [7, 10], [9, 11], [4, 11]]}}
{"question_id": 9, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 6 distinct paths:\n   Path 1: a path of length 11 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12\n   Path 2: a direct edge between vertices 1 and 11\n   Path 3: a direct edge between vertices 7 and 11\n   Path 4: a direct edge between vertices 1 and 7\n   Path 5: a direct edge between vertices 5 and 12\n   Path 6: a direct edge between vertices 9 and 12\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 6, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1, 11], [7, 11], [1, 7], [5, 12], [9, 12]]}}
{"question_id": 10, "prompt": "Let's play Cactus Search Game! Your task is to find a secret vertex in a cactus graph through strategic guessing.\n\nRules:\n1. The game is played on a cactus graph with 12 vertices (numbered from 1 to 12)\n2. A secret vertex v has been chosen\n3. After each incorrect guess, you'll be told which adjacent vertex leads closer to v\n\nGame Setup:\nThis cactus graph consists of 12 vertices and 5 distinct paths:\n   Path 1: a path of length 12 through vertices 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> 11 -> 12 -> 1\n   Path 2: a direct edge between vertices 4 and 9\n   Path 3: a direct edge between vertices 7 and 11\n   Path 4: a direct edge between vertices 1 and 8\n   Path 5: a direct edge between vertices 6 and 12\n\nEach path represents a sequence of connected vertices, where consecutive vertices are connected by edges.\nThe graph is structured as a cactus, meaning each edge belongs to at most one cycle.\n\nQuery Format:\n1. To make a guess:\n   Format: 'My Guess: x'\n   where x is the vertex number (1 =< x =< 12)\n   Example: 'My Guess: 3'\n\n2. System Response:\n   - If correct: 'FOUND'\n   - If incorrect: 'GO w' (w is adjacent vertex closer to target)\n\nExample Interaction:\nYou: 'My Guess: 3'\nSystem: 'GO 4'\nYou: 'My Guess: 4'\nSystem: 'FOUND'\n\nInstructions:\n1. Make guesses based on previous responses\n2. Use exactly the format shown above\n3. Explain your reasoning before each guess\n\nRemember:\n- Each vertex is numbered from 1 to 12\n- The graph structure is fixed as described above\n- Adjacent vertices in paths are directly connected\n- Use responses wisely to navigate towards target\n\nReady to start? Make your first query!", "type": "State Operation", "scale": 12, "difficulty": "medium", "title": "CactusSearch", "graph": {"n": 12, "m": 5, "paths": [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1], [4, 9], [7, 11], [1, 8], [6, 12]]}}
