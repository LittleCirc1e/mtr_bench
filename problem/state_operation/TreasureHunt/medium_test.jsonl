{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 1, "graph": [[1, 5], [1, 6], [1, 7], [2, 3], [2, 4], [2, 5], [2, 6], [3, 5], [4, 5], [4, 6], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 2, "graph": [[1, 2], [1, 3], [1, 4], [1, 6], [1, 7], [2, 4], [2, 5], [2, 6], [2, 7], [3, 6], [3, 7], [4, 5], [4, 6], [4, 7], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 3, "graph": [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [2, 3], [2, 5], [2, 6], [3, 7], [4, 6], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 4, "graph": [[1, 2], [1, 3], [1, 4], [1, 6], [2, 3], [2, 4], [2, 6], [2, 7], [3, 5], [3, 6], [3, 7], [4, 5], [4, 7], [5, 6], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 5, "graph": [[1, 2], [1, 3], [1, 5], [1, 6], [1, 7], [2, 4], [2, 5], [3, 4], [3, 5], [3, 7], [4, 5], [4, 6], [4, 7], [5, 6]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 6, "graph": [[1, 3], [1, 4], [1, 5], [2, 3], [2, 5], [2, 6], [3, 4], [3, 5], [3, 7], [4, 7], [5, 6], [5, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 7, "graph": [[1, 3], [1, 4], [1, 6], [1, 7], [2, 3], [2, 4], [2, 5], [2, 6], [3, 4], [3, 6], [3, 7], [4, 5], [4, 6], [4, 7], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 8, "graph": [[1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [2, 3], [2, 5], [2, 6], [3, 4], [3, 6], [3, 7], [4, 7], [5, 6], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 9, "graph": [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [2, 3], [2, 4], [2, 5], [2, 6], [3, 4], [3, 7], [4, 5], [4, 6], [4, 7], [5, 6], [5, 7], [6, 7]]}
{"prompt": "Let's play the Treasure Hunt Game! Your task is to explore an enchanted forest where a mischievous wizard keeps scrambling the junction numbers to confuse you.\n\nRules:\n1. Game Setup:\n   - Enchanted forest with 7 junctions\n   - Each junction contains a treasure\n   - You start at junction 1\n   - Initial flag placed at starting junction\n   - Junctions are connected by fixed paths\n\n2. Game Mechanics:\n   What You Can See:\n   - At each junction, you can only see:\n     * Number of paths at each connected junction\n     * Whether you've placed a flag there\n   \n   The Wizard's Trick:\n   - The wizard hides real junction numbers\n   - Each time you visit a junction, connected junctions are shown in random order\n   - Though connections stay the same, you can't identify specific junctions\n   - Must use path counts and flags to navigate\n\n3. Information Format:\n   I provide: 'R d deg1 flag1 deg2 flag2 ... degd flagd'\n   - R: you're at current junction\n   - d: number of connected junctions\n   - degi: number of paths at connected junction i\n   - flagi: flag status at connected junction i (0=no, 1=yes)\n   Example: 'R 3 2 1 4 0 3 0' means:\n   - 3 connected junctions\n   - First has 2 paths and is flagged\n   - Second has 4 paths and no flag\n   - Third has 3 paths and no flag\n\nInstructions:\n- Format your move as: 'My Choice: X'\n  where X is from 1 to d (position in current list)\n- Give your reasoning before each choice\n- Wait for my response before next move\n\nExample Round:\nStarting at junction 1:\n\nMe: 'R 2 2 0 2 0'\n- Two connected junctions\n- Both have 2 paths\n- Neither has your flag\n\nYou: 'My Choice: 1'\n- Moving to first listed junction\n\nMe: 'R 2 2 0 2 1'\n- Two connected junctions shown\n- One leads back (has your flag)\n- One is unexplored (no flag)\n\nYou: 'My Choice: 1'\n- Moving to unflagged junction\n\nRemember:\n- Real junction numbers are hidden\n- Connected junctions appear in random order each visit\n- Use path counts and flags to track progress\n- Must visit all junctions\n- Invalid move = automatic loss\n\nReady to start? Make your first query!", "type": "State Operation", "feedback": "Indirect Value Response", "scale": 7, "difficulty": "medium", "title": "TreasureHunt", "question_id": 10, "graph": [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [3, 4], [3, 5], [3, 7], [4, 5], [4, 6], [4, 7], [5, 6], [5, 7], [6, 7]]}
