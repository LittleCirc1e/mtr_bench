{"question_id": 1, "prompt": "Let's play Bitwise Comparison Game! Your task is to find two positions in a hidden permutation that maximize their XOR value.\n\nRules:\n1. There is a hidden permutation of 5 numbers (0 to 4)\n2. Each position contains a unique number from 0 to 4\n3. You can make comparison queries between OR operations:\n   - Each query compares (pa|pb) with (pc|pd)\n   - | denotes bitwise OR operation\n   - You'll receive '<', '=' or '>' as response\n\nQuery Types:\n1. To make a comparison query:\n   Format: 'My Query: a b c d'\n   where:\n   - a,b,c,d are positions in array (0-based indexing)\n   Example: 'My Query: 0 2 3 1'\n   Response will be one of: '<', '=', '>'\n\n2. To submit final answer:\n   Format: 'My Answer: i j'\n   where i and j are the positions with maximum XOR value\n   Example: 'My Answer: 3 2'\n\nInstructions:\n1. Make queries based on previous comparisons\n2. Use exactly the formats shown above\n3. Explain your reasoning before each query\n\nRemember:\n- All positions contain unique numbers from 0 to 4\n- Position indices start from 0\n- Think carefully about which positions to compare\n- Use your queries wisely to find maximum XOR pair\n\nReady to start? Make your first query!", "type": "Information Query", "feedback": "Indirect Value Response", "scale": 5, "difficulty": "easy", "title": "BitCompare", "list": [0, 4, 3, 1, 2], "answer": [1, 2]}
